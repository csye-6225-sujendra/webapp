name: Packer Deployment
 
on:
  pull_request:
    branches: [main]
 
jobs:
  build:
    name: Packer
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_DIALECT: ${{ secrets.DB_DIALECT }}
      DB_POOL_MAX: ${{ secrets.DB_POOL_MAX }}
      DB_POOL_MIN: ${{ secrets.DB_POOL_MIN }}
      DB_POOL_ACQUIRE: ${{ secrets.DB_POOL_ACQUIRE }}
      DB_POOL_IDLE: ${{ secrets.DB_POOL_IDLE }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      DB_PORT: ${{ secrets.DB_PORT }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
 
    - name: GCloud authentication      
      id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
 
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
 
    - name: Install Packer
      run: |
        if ! command -v packer &> /dev/null
        then
            curl -O https://releases.hashicorp.com/packer/1.7.4/packer_1.7.4_linux_amd64.zip
            unzip packer_1.7.4_linux_amd64.zip
            sudo mv packer /usr/local/bin/packer
        fi
        packer --version

    
    - name: Set up MySQL server
      run: |
        sudo systemctl start mysql
        sudo systemctl status mysql
 
    - name: Create MySQL  database
      run: |
        sudo mysql -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" -e "CREATE DATABASE ${{ secrets.DB_NAME }};"
      
    - name: Alter MySQL Root Password
      run: |
        sudo mysqladmin -u root -p"${{ secrets.MYSQL_ROOT_PASSWORD }}" password "${{ secrets.DB_PASSWORD }}"
    
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18.15.0
 
    - name: Install dependencies
      run: npm install
 
    - name: run test
      run: npm test
 
    - name: create artifact
      run: |
        zip -r webapp.zip ./
 
    - name: Initialize Packer
      run: packer init packer/packer.pkr.hcl
    
    - name: Check Formatting
      run: |
        if !packer fmt -check packer/packer.pkr.hcl; then
          echo "Invalid packer format"
          exit 1
        fi
 
    - name: Validate Packer Template
      run: packer validate packer/packer.pkr.hcl
    
 
    - name: Deploy packer image
      run: packer build packer/packer.pkr.hcl

    - name: Create new instance template version
      run: |
        gcloud compute images list  --sort-by=~creationTimestamp --format='value(NAME)' --limit=1
        gcloud compute instance-templates create webapp-template-20240410-074205 --project=testing-project-415400 --description=Creating\ Regional\ Compute\ Instance\ Template --machine-type=e2-medium --network-interface=network-tier=PREMIUM,subnet=webapp --metadata=startup-script=\#\!/bin/bash$'\n'$'\n'\#\ Navigate\ to\ the\ webapp\ directory$'\n'cd\ /tmp/webapp$'\n'$'\n'\#\ Create\ the\ .env\ file\ with\ the\ required\ values$'\n'cat\ \<\<EOF\ \>\ .env$'\n'DB_HOST=10.158.0.2$'\n'DB_USER=root$'\n'DB_PASSWORD=\*2r\}s\*Qrst1kR77G$'\n'DB_NAME=webapp$'\n'DB_PORT=3306$'\n'DB_DIALECT=mysql$'\n'DB_POOL_MAX=10$'\n'DB_POOL_MIN=2$'\n'DB_POOL_ACQUIRE=30000$'\n'DB_POOL_IDLE=10000$'\n'EOF$'\n'$'\n'\#\ Set\ the\ correct\ permissions\ for\ the\ .env\ file$'\n'chmod\ 655\ /tmp/webapp/.env$'\n'$'\n'\#\ Start\ or\ restart\ the\ service$'\n'sudo\ systemctl\ start\ csye6225$'\n' --maintenance-policy=MIGRATE --provisioning-model=STANDARD --service-account=vm-service-account@testing-project-415400.iam.gserviceaccount.com --scopes=https://www.googleapis.com/auth/cloud-platform --region=us-east1 --tags=deny-ssh,allow-ssh,allow-health-check,allow-http --create-disk=auto-delete=yes,boot=yes,device-name=persistent-disk-0,image=projects/testing-project-415400/global/images/centos-8-packer-20240409111414,kms-key=projects/testing-project-415400/locations/us-east1/keyRings/rings-of-kms-five/cryptoKeys/vm-crypto-key,mode=rw,size=100,type=pd-balanced --no-shielded-secure-boot --shielded-vtpm --shielded-integrity-monitoring --reservation-affinity=any

    - name: Configure instance group with new template
      run: |
        gcloud compute instance-groups managed set-instance-template webapp-igm --region=us-east1 --template=webapp-template-20240410-074205 --project=testing-project-415400

    - name: Start rolling update
      run: |
        gcloud compute instance-groups managed rolling-action start-update webapp-igm --version=template="webapp-template-20240410-074205" --max-surge=5 --region=us-east1 --project=testing-project-415400

    - name: Monitor instance group update
      run: |
        status="RUNNING"
        while [ "$status" != "True" ]; do
        status=$(gcloud compute instance-groups managed describe webapp-igm --region=us-east1 --project=testing-project-415400 --format="value(status.versionTarget.isReached)")
        sleep 10
        done